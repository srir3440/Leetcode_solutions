public class Solution {
    private int[][] co;
    private int[,] opt;
    public int MinCost(int[][] costs) {
        co=costs;
        opt=new int[costs.Length,costs[0].Length];
        
        return dfs(0,-1);
    }
    
    private int dfs(int start,int color)
    {
        //Console.WriteLine(start+" "+color);
        if(start>=co.Length)
            return 0;
        
        if(color!=-1 && opt[start,color]!=0)
            return opt[start,color];
            
        
        int min=Int32.MaxValue;
        for(int i=0;i<co[0].Length;i++)
        {
            if(color!=i)
                min=Math.Min(min,dfs(start+1,i)+co[start][i]);
        }
        
        if(color!=-1)
            opt[start,color]=min;   
        
        return min;
    }
}
