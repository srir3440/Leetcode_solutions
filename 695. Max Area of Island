public class Solution {
    private int ans=0;
    private HashSet<string> visited=new HashSet<string>();
    public int MaxAreaOfIsland(int[][] grid) {
        for(int i=0;i<grid.Length;i++)
        {
            for(int j=0;j<grid[i].Length;j++)
            {
                if(grid[i][j]==1)
                {
                    visited=new HashSet<string>();
                    dfs(grid,i,j,1);
                    ans=Math.Max(ans,visited.Count);
                }
                    
            }
        }
        return ans;
    }
    
    private void dfs(int[][] grid,int i,int j,int area)
    {
        if(!isvalid(grid,i,j))
        {
            ans=Math.Max(ans,area-1);
            return;
        }
        //Console.WriteLine(i+" "+j+" "+area);
        grid[i][j]=0;
        visited.Add(tostring(i,j));
        dfs(grid,i+1,j,area+1);
        dfs(grid,i,j-1,area+1);
        dfs(grid,i-1,j,area+1);
        dfs(grid,i,j+1,area+1);
    }
    
    private bool isvalid(int[][] grid,int i,int j)
    {
        if(i<0 || i>=grid.Length || j<0 || j>=grid[i].Length || grid[i][j]==0)
            return false;
        return true;
    }
    
    private string tostring(int i,int j)
    {
        return i.ToString()+" "+j.ToString();
    }
}
