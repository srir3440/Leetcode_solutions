public class Solution {
    public int Search(int[] nums, int target) {
        int left=0,right=nums.Length-1,mid;
        while(left<right)
        {
            mid=(left+right)/2;
            if(nums[mid]>nums[right])
                left=mid+1;
            else
                right=mid;
        }
        int pivot=left;
        Console.WriteLine(pivot);
        if(nums[pivot]==target)
            return pivot;
        int lefthalf=binsearch(nums,0,left-1,target);
        int righthalf=binsearch(nums,left+1,nums.Length-1,target);
        if(lefthalf*righthalf>0)
            return -1;
        return lefthalf*righthalf*-1;
    }
    
    private int binsearch(int[] nums,int left,int right,int target)
    {
        int mid;
        while(left<=right)
        {
            mid=(left+right)/2;
            Console.WriteLine(mid);
            if(nums[mid]==target)
                return mid;
            if(nums[mid]<target)
                left=mid+1;
            else
                right=mid-1;
        }
        return -1;
    }
}
