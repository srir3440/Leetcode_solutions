public class Solution {
    public int ComputeArea(int ax1, int ay1, int ax2, int ay2, int bx1, int by1, int bx2, int by2) {
        
        int total=area(ax1,ay1,ax2,ay2)+area(bx1,by1,bx2,by2);
        
        // x of bottom left-most point of rectangle 1 is >= x of bottom right-most of rectangle 2 or
        // y of bottom left-most point of rectangle 1 is >= y of bottom right-most of rectangle 2 or
        // x of bottom left-most point of rectangle 1 is >= x of bottom right-most of rectangle 2 or
        // y of bottom left-most point of rectangle 1 is >= y of bottom right-most of rectangle 2
        if(bx1>=ax2 || by1>=ay2 || ax1>=bx2 || ay1>=by2)
            return total;
        
        return total-((Math.Abs(Math.Min(ay2,by2)-Math.Max(ay1,by1)))*Math.Abs((Math.Max(ax1,bx1)-Math.Min(ax2,bx2))));
    }
    
    private int area(int blx,int bly,int trx,int tryy)
    {
        return (trx-blx)*(tryy-bly);
    }
}
