public class SparseVector {
    private Dictionary<int,int> vec;
    public SparseVector(int[] nums) {
        vec=new Dictionary<int,int>();
        for(int i=0;i<nums.Length;i++)
        {
            if(nums[i]!=0)
                vec.Add(i,nums[i]);
        } 
    }
    
    // Return the dotProduct of two sparse vectors
    public int DotProduct(SparseVector vec) {
        int sum=0;
        foreach(var i in this.vec.Keys)
        {
            if(this.vec.ContainsKey(i) && vec.vec.ContainsKey(i))
                sum+=this.vec[i]*vec.vec[i];    
        }
        return sum;
    }
}

// Your SparseVector object will be instantiated and called as such:
// SparseVector v1 = new SparseVector(nums1);
// SparseVector v2 = new SparseVector(nums2);
// int ans = v1.DotProduct(v2);
