public class Solution {
    public int ShortestWay(string source, string target) {
        int cnt=0;
        string toremove="";
        /*cnt=lcs(target,source,out toremove);
        Console.WriteLine(cnt+" "+toremove+" "+target);
        target=removechars(target,toremove);
        Console.WriteLine(target);*/
        while(target.Length!=0)
        {
            if(lcs(target,source,out toremove)<1)
                return -1;
            cnt++;
            target=removechars(target,toremove);
        }
        return cnt;
    }
    
    private int lcs(string target,string source,out string toremove)
    {
        toremove="";
        int[,] opt=new int[target.Length+1,source.Length+1];
        int[,] pi=new int[target.Length+1,source.Length+1];
        int i,j;
        for(i=1;i<=target.Length;i++)
        {
            for(j=1;j<=source.Length;j++)
            {
                if(target[i-1]==source[j-1])
                {
                    opt[i,j]=opt[i-1,j-1]+1;
                    pi[i,j]=1;
                }
                else
                {
                    if(opt[i-1,j]>=opt[i,j-1])
                    {
                        opt[i,j]=opt[i-1,j];
                        pi[i,j]=2;
                    }
                    else
                    {
                        opt[i,j]=opt[i,j-1];
                        pi[i,j]=3;
                    }
                }
            }
        }
        //Console.WriteLine(opt[target.Length,source.Length]);
        i=target.Length;j=source.Length;
        while(pi[i,j]!=0)
        {
            if(pi[i,j]==1)
            {
                toremove=target[i-1]+toremove;
                i-=1;
                j-=1;
            }
            else if(pi[i,j]==2)
                i-=1;
            else if(pi[i,j]==3)
                j-=1;
        }
        return opt[target.Length,source.Length];
    }
    
    private string removechars(string target,string toremove)
    {
        StringBuilder tar=new StringBuilder(target);
        int start=0;
        for(int i=0;i<toremove.Length;i++)
        {
            start=tar.ToString().IndexOf(toremove[i],start);
            //Console.WriteLine(start+" "+toremove[i]+" "+tar.ToString());
            tar=tar.Remove(start,1);
        }
        return tar.ToString();
    }
}
