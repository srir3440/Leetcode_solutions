/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    private Stack<TreeNode> stack=new Stack<TreeNode>();
    private TreeNode root;
    public TreeNode BstFromPreorder(int[] preorder) {
        
        root=new TreeNode(preorder[0]);
        stack.Push(root);
        TreeNode tmp=root;
        for(int i=1;i<preorder.Length;i++)
        {
            tmp=new TreeNode(preorder[i]);
            if(preorder[i]<=stack.Peek().val)
                stack.Peek().left=tmp;
            else
            {
                TreeNode curr=null;
                while(stack.Count>0 && stack.Peek().val<preorder[i])
                    curr=stack.Pop();
                curr.right=tmp;
            }
            stack.Push(tmp);
        }
        return root;
    }
}
