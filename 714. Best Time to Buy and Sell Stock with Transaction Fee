public class Solution {
    private int[] p;
    private Dictionary<int,int> opt=new Dictionary<int,int>();
    private int f;
    public int MaxProfit(int[] prices, int fee) {
        
        p=prices;
        f=fee;
        
        int max=0;
        for(int i=prices.Length-1;i>=0;i--)
            max=Math.Max(max,dfs(i));
        
        return max;
    }
    
    private int dfs(int start)
    {
        if(start>=p.Length)
            return 0;
        
        if(opt.ContainsKey(start))
            return opt[start];
        
        
        int max=0;
        for(int i=start+1;i<p.Length;i++)
        {
            int temp=dfs(i);
            max=Math.Max(max,Math.Max(temp,temp+p[i]-p[start]-f));
        }
        
        opt[start]=max;
        
        return max;
            
    }
}
