public class customComparer:Comparer<int>
{
    public override int Compare(int a,int b)
    {
        if(a>b)
            return -1;
        else if(a<b)
            return 1;
        return 0;
    }
}


public class MedianFinder {
    private PriorityQueue<int,int> minheap=new PriorityQueue<int,int>();
    private PriorityQueue<int,int> maxheap;
    private int i;
    public MedianFinder() {
        maxheap=new PriorityQueue<int,int>(new customComparer());
        minheap=new PriorityQueue<int,int>();
        i=0;
    }
    
    public void AddNum(int num) {
        
        i++;
        if(i==1)
            maxheap.Enqueue(num,num);
            
                  
        else if(i%2==1)
        {
            // if incoming number is greater than (i-1)/2 th smallest number 
            if(num>minheap.Peek())
            {
                
                int tmp=minheap.Dequeue();
                maxheap.Enqueue(tmp,tmp);
                minheap.Enqueue(num,num);
            }
            // if incoming number is less than (i-1)/2 th smallest number, no change in median
            else
                maxheap.Enqueue(num,num);
        }
        
        else
        {
            // if incoming number is greater than (i-1)/2 th smallest number and i!=2, , no change in median
            if(minheap.Count!=0 && num>minheap.Peek())       
                minheap.Enqueue(num,num);
            
            // if incoming number is smaller than (i-1)/2 th smallest number and i==2 
            else
            {
                maxheap.Enqueue(num,num);
                int tmp=maxheap.Dequeue();
                minheap.Enqueue(tmp,tmp);
            }
        }
        
        //Console.WriteLine(i+" "+maxheap.Count+" "+minheap.Count);
    }
    
    public double FindMedian() {
        //Console.WriteLine(i+" "+maxheap.Count+" "+minheap.Count);
        if(minheap.Count==0 || i%2==1)
            return maxheap.Peek();
            
        return (double)(minheap.Peek()+maxheap.Peek())/2;
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.AddNum(num);
 * double param_2 = obj.FindMedian();
 */
