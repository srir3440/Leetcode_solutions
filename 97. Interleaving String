public class Solution {
    private Dictionary<string,bool> opt=new Dictionary<string,bool>();
    public bool IsInterleave(string s1, string s2, string s3) {
        return dfs(s1,s2,s3);
    }
    
    private bool dfs(string s1,string s2,string s3)
    {
        //Console.WriteLine(s1+" "+s2+" "+s3);
        if(s3=="")
            return s1=="" && s2=="";
        
        string tmp1=s1+" "+s2+" "+s3;
        if(opt.ContainsKey(tmp1))
            return opt[tmp1];
        
        
        bool flag=false;
        for(int i=0;i<s1.Length;i++)
        {
            if(i+1<=s3.Length && s1.Substring(0,i+1)==s3.Substring(0,i+1))
                flag=dfs(s1.Substring(i+1),s2,s3.Substring(i+1));
            if(flag)
            {
                opt[tmp1]=true;
                return true;
            }
                
        }
        
        
        for(int i=0;i<s2.Length;i++)
        {
            if(i+1<=s3.Length && s2.Substring(0,i+1)==s3.Substring(0,i+1))
                flag=dfs(s1,s2.Substring(i+1),s3.Substring(i+1));
            if(flag)
            {
                opt[tmp1]=true;
                return true;
            }
        }
        
        opt[tmp1]=false;
        return false;
    }
}
