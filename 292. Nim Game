/** 
 * Problem:
 * You are playing the following Nim Game with your friend:
 * Initially, there is a heap of stones on the table.
 * You and your friend will alternate taking turns, and you go first.
 * On each turn, the person whose turn it is will remove 1 to 3 stones from the heap.
 * The one who removes the last stone is the winner.
 * Given n, the number of stones in the heap, return true if you can win the game assuming both you and your friend play optimally, otherwise return false.
 */
 
 
public class Solution {
    public bool CanWinNim(int n) {
        bool[,] opt=new bool[4,3];
        for(int i=0;i<4;i++)
        {
            for(int j=0;j<3;j++)
            {
                if(i==j)
                    opt[i,j]=true;
            }
        }
        /*int turn=0;
        for(int i=3;i<n;i++)
        {
            for(int j=0;j<3;j++)
            {
                bool tmp=evalrow(opt,i-j-1);
                if(turn%2==0)
                    opt[i,j]=!tmp;
                else
                    opt[i,j]=tmp;
            }
        }*/
        print(opt,4);
        return evalrow(opt,3-n%4);
    }
    
    private void print(bool[,] opt,int n)
    {
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<3;j++)
                Console.Write(opt[i,j]+" ");
            Console.WriteLine();
        }
        Console.WriteLine();
    }
    
    private bool evalrow(bool[,] opt,int i)
    {
        for(int j=0;j<3;j++)
        {
            if(opt[i,j])
                return true;
        }
        return false;
    }
}
