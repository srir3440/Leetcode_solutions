public class Solution {
    private List<int> nos=new List<int>();
    private IList<IList<int>> ans=new List<IList<int>>();
    public IList<IList<int>> FourSum(int[] nums, int target) {
        Array.Sort(nums);
        /*for(int i=0;i<nums.Length;i++)
            Console.Write(nums[i]+" ");*/
        dfs(nums,(long)target,3);
        return ans;
    }
    
    private void dfs(int[] nums,long target,int k,int start=0)
    {
        if(k==2)
        {
            targetsum(nums,target,start);
            return;
        }
        for(int i=start;i<nums.Length;i++)
        {
            if(i!=start && nums[i-1]==nums[i])
                continue;
            nos.Add(nums[i]);
            dfs(nums,target-nums[i],k-1,i+1);
            nos.RemoveAt(nos.Count-1);
        }
    }
    
    private void targetsum(int[] nums,long target,int left)
    {
        int right=nums.Length-1;
        while(left<right)
        {
            if(nums[left]+nums[right]==target)
            {
                nos.Add(nums[left]);
                nos.Add(nums[right]);
                ans.Add(new List<int>(nos));
                nos.RemoveAt(nos.Count-1);
                nos.RemoveAt(nos.Count-1);
                while(left+1<right && nums[left]==nums[left+1])
                    left++;
                left++;
                right--;
            }
            else if(nums[left]+nums[right]>target)
                right--;
            else
                left++;
        }
    }
}
