/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public int RangeSumBST(TreeNode root, int low, int high) {
        return dfs(root,low,high);
    }
    
    private int dfs(TreeNode node,int l,int h)
    {
        if(node==null)
            return 0;
        
        //Console.WriteLine(node.val);
        if(l<=node.val && node.val<=h)
            return dfs(node.left,l,h)+dfs(node.right,l,h)+node.val;
        
        else if(node.val<l)
            return dfs(node.right,l,h);
        
        else if(node.val>h)
            return dfs(node.left,l,h);
         
        return 0;
            
    }
}
