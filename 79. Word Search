public class Solution {
    private char[][] b;
    private string w;
    private bool ans=false;
    public bool Exist(char[][] board, string word) {
        b=board;
        w=word;
        for(int i=0;i<board.Length;i++)
        {
            for(int j=0;j<board[i].Length;j++)
            {
                if(word[0]==board[i][j])
                    dfs(i,j,0);
                if(ans)
                    return ans;
            }
        }
    
        return false;
    }
    
    
    private void dfs(int i,int j,int index)
    {
        if(ans)
            return;
        
        if(!ans && index==w.Length)
        {
            ans=true;
            return;
        }
        
        if(!isvalid(i,j) || w[index]!=b[i][j])
            return;
        
        char tmp=b[i][j];
        b[i][j]='.';
        dfs(i,j-1,index+1);
        dfs(i-1,j,index+1);
        dfs(i,j+1,index+1);
        dfs(i+1,j,index+1);
        b[i][j]=tmp;
    }
    
    private bool isvalid(int i,int j)
    {
        if(i<0 || i>=b.Length || j<0 || j>=b[i].Length || b[i][j]=='.')
            return false;
        return true;
    }
}
