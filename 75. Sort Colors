/**
 * Problem:
 * Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.
 * We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.
 * You must solve this problem without using the library's sort function.
 */
 public class Solution {
    public void SortColors(int[] nums) {
        quicksort(ref nums,0,nums.Length-1);
    }
    
    private void quicksort(ref int[] nums,int i,int j)
    {
        if(i>j)
            return;
        int m=partition(ref nums,i,j);
        quicksort(ref nums,i,m-1);
        quicksort(ref nums,m+1,j);
    }
    
    private int partition(ref int[] nums,int l,int r)
    {
        while(true)
        {
            while(l<r && nums[l]<nums[r])
                r=r-1;
            if(l==r)break;
            swap(ref nums,l,r);
            l=l+1;
            while(l<r && nums[l]<nums[r])
                l=l+1;
            if(l==r)break;
            swap(ref nums,l,r);
            r=r-1;
        }
        return l;
    }
    
    private void swap(ref int[] nums,int i,int j)
    {
        int tmp=nums[i];
        nums[i]=nums[j];
        nums[j]=tmp;
    }
}
