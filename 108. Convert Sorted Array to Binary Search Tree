/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public TreeNode SortedArrayToBST(int[] nums) {
        return SplitAndMakeBST(null,nums,0,nums.Length-1);
    }
    
    private TreeNode SplitAndMakeBST(TreeNode node,int[] nums,int start,int end)
    {
        //Console.WriteLine(start+" "+end);
        if(start>end)
            return null;
        int index=(start+end)/2;
        node=new TreeNode(nums[index]);
        node.left=SplitAndMakeBST(node.left,nums,start,index-1);
        node.right=SplitAndMakeBST(node.right,nums,index+1,end);
        return node;
    }
}
