public class Solution {
    public int[][] DiagonalSort(int[][] mat) {
        int noofheaps=mat.Length+mat[0].Length-1;
        List<PriorityQueue<int,int>> heaps=new List<PriorityQueue<int,int>>();
        for(int i=0;i<noofheaps;i++)
            heaps.Add(new PriorityQueue<int,int>());
        for(int i=0;i<mat.Length;i++)
        {
            for(int j=0;j<mat[i].Length;j++)
            {
                if(i-j>=0)
                    heaps[i-j].Enqueue(mat[i][j],mat[i][j]);
                else
                    heaps[noofheaps+i-j].Enqueue(mat[i][j],mat[i][j]);
            }
        }
        //for(int i=0;i<noofheaps;i++)
            //Console.WriteLine(heaps[i].Count);
        for(int i=0;i<mat.Length;i++)
        {
            for(int j=0;j<mat[i].Length;j++)
            {
                if(i-j>=0)
                    mat[i][j]=heaps[i-j].Dequeue();
                else
                    mat[i][j]=heaps[noofheaps+i-j].Dequeue();
            }
        }
        return mat;
    }
}
