public class Solution {
    public int[][] MatrixBlockSum(int[][] mat, int k) {
        int[,] opt=new int[mat.Length+1,mat[0].Length+1];
        for(int i=1;i<=mat.Length;i++)
        {
            for(int j=1;j<=mat[i-1].Length;j++)
                opt[i,j]=opt[i,j-1]+mat[i-1][j-1];
        }
        //print(opt,mat.Length,mat[0].Length);
        for(int i=1;i<=mat.Length;i++)
        {
            for(int j=1;j<=mat[0].Length;j++)
            {
                mat[i-1][j-1]=0;
                for(int m=Math.Max(0,i-k);m<=Math.Min(mat.Length,i+k);m++)
                    mat[i-1][j-1]+=(opt[m,Math.Min(mat[0].Length,j+k)]-opt[m,Math.Max(0,j-k-1)]);
            }
        }
        return mat;
    }
    
    private void print(int[,] opt,int m,int n)
    {
        for(int i=0;i<=m;i++)
        {
            for(int j=0;j<=n;j++)
                Console.Write(opt[i,j]+" ");
            Console.WriteLine();
        }
    }
}
