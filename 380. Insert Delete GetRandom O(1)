public class RandomizedSet {
    private Dictionary<int,int> dict;
    private List<int> list;
    private Random rand;
    public RandomizedSet() {
        dict=new Dictionary<int,int>();   // element - index mapping
        list=new List<int>();
        rand=new Random();
    }
    
    public bool Insert(int val) {
        
        if(dict.ContainsKey(val))
            return false;
        
        dict[val]=list.Count;
        list.Add(val);
        
        return true;
    }
    
    public bool Remove(int val) {
        
        if(!dict.ContainsKey(val))
            return false;
        
        
        int index=dict[val];
        
        // swap with last value to make removal constant time
        int tmp=list[list.Count-1];
        list[list.Count-1]=list[index];
        list[index]=tmp;
        
        //update the index of last element in dict
        dict[tmp]=index;
        
        //remove last element
        dict.Remove(list[list.Count-1]);
        list.RemoveAt(list.Count-1);
        
        return true;
    }
    
    public int GetRandom() {
        int r=rand.Next(0,list.Count);
        return list[r];
    }
}

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet obj = new RandomizedSet();
 * bool param_1 = obj.Insert(val);
 * bool param_2 = obj.Remove(val);
 * int param_3 = obj.GetRandom();
 */
