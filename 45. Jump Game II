public class Solution {
    private int[] n;
    private Dictionary<int,int> opt=new Dictionary<int,int>();
    public int Jump(int[] nums) {
        n=nums;
        return dfs(0);
    }
    
    private int dfs(int index)
    {
        if(index>=n.Length-1)
            return 0;
        
        if(opt.ContainsKey(index))
            return opt[index];
        
        int i=1,min=Int32.MaxValue;
        for(;i<=n[index];i++)
            min=Math.Min(min,dfs(index+i));
        
        if(min==Int32.MaxValue)
            opt[index]=min;
        else
            opt[index]=min+1;
        
        return opt[index];
    }
}
