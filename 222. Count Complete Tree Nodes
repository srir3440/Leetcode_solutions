/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    private int ans=-1;
    public int CountNodes(TreeNode root) {
        if(root==null)
            return 0;
        Queue<TreeNode> queue=new Queue<TreeNode>();
        root.val=1;
        queue.Enqueue(root);
        while(queue.Count!=0)
        {
            for(int i=queue.Count;i>0;i--)
            {
                TreeNode tmp=queue.Dequeue();
                if(tmp!=null)
                {
                    if(tmp.left==null)
                        return tmp.val*2-1;
                    else if(tmp.right==null)
                        return tmp.val*2;
                    tmp.right.val=tmp.val*2+1;
                    tmp.left.val=2*tmp.val;
                    queue.Enqueue(tmp.left);
                    queue.Enqueue(tmp.right);
                }
            }
        }
        return ans;
    }
}
