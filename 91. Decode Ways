public class Solution {
    public Dictionary<string,int> dict=new Dictionary<string,int>();
    public int NumDecodings(string s) {
        return dfs(s);
    }
    
    public int dfs(string s)
    {
        //Console.WriteLine(s+" "+s.Length);
        if(dict.ContainsKey(s))
            return dict[s];
        if(s.Length<=1)
            return isvalid(s);
        if(s.Length==2)
        {
            int cnt=0;
            cnt+=Math.Min(isvalid(s[0].ToString()),isvalid(s[1].ToString()));
            cnt+=isvalid(s);
            return cnt;
        }
        int one=0,two=0;
        if(isvalid(s[0].ToString())==1)
            one=dfs(s.Substring(1));
        if(isvalid(s.Substring(0,2))==1)
            two=dfs(s.Substring(2));
        dict[s]=one+two;
        return dict[s];
    }
    
    private int isvalid(string s)
    {
        //Console.WriteLine(s);
        if(s.Length==0)
            return 1;
        if(s[0]=='0' || (s.Length==2 && s[0]>'2') || (s.Length==2 && s[0]=='2' && s[1]>'6'))
            return 0;
        return 1;
    }
}
