public class customComparer:Comparer<int[]>
{
    public override int Compare(int[] a,int[] b)
    {
        if(a[2].CompareTo(b[2])!=0)
            return a[2].CompareTo(b[2]);
        return 0;
    }
}

public class Solution {
    private List<int[]> mh1=new List<int[]>();
    private List<int[]> mh2=new List<int[]>();
    public int MaxSumTwoNoOverlap(int[] nums, int firstLen, int secondLen) {
        
        
        for(int i=0;i<nums.Length;i++)
        {
            int curr=0;
            for(int j=i;j<nums.Length;j++)
            {
                curr+=nums[j];
                if(j-i+1==firstLen)
                    mh1.Add(new int[]{i,j,curr});
                if(j-i+1==secondLen)
                    mh2.Add(new int[]{i,j,curr});
            }
        }
        
        //Console.WriteLine(mh1.Count+" "+mh2.Count);
        mh1.Sort(new customComparer());
        mh2.Sort(new customComparer());
        /*for(int i=0;i<mh1.Count;i++)
            Console.Write(mh1[i][2]+" ");
        Console.WriteLine();
        
        for(int i=0;i<mh2.Count;i++)
            Console.Write(mh2[i][2]+" ");
        Console.WriteLine();*/
        
        
        return dfs(mh1.Count-1,mh2.Count-1);
    }
    
    
    private int dfs(int i,int j)
    {
        //Console.WriteLine(i+" "+j);
        if(i<0 || j<0)
            return 0;
            
        if(!overlap(i,j))
            return mh1[i][2]+mh2[j][2];
        
        return Math.Max(dfs(i-1,j),dfs(i,j-1));
    }
    
    
    private bool overlap(int i,int j)
    {
        //Console.WriteLine(mh1[i][0]+" "+mh1[i][1]+" "+mh2[j][0]+" "+mh2[j][1]);
        //Console.WriteLine(Math.Max(mh1[i][0],mh2[j][0])+" "+Math.Min(mh1[i][1],mh2[j][1]));
        if(Math.Max(mh1[i][0],mh2[j][0])<=Math.Min(mh1[i][1],mh2[j][1]))
            return true;
        return false;
    }
}
