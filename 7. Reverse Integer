public class Solution {
    public int Reverse(int x) {
        if(x==0)
            return 0;
        string temp=rev(x,true);
        //Console.WriteLine(temp);
        string maxValue=rev(Int32.MaxValue);
        //Console.WriteLine(maxValue);
        if(temp.Length<maxValue.Length)
        {
            if(x<0)
                return -Int32.Parse(temp);
            return Int32.Parse(temp);
        }
        for(int i=0;i<temp.Length;i++)
        {
            if(temp[i]>maxValue[i])
                return 0;
            else if(temp[i]<maxValue[i])
            {
                if(x<0)
                    return -Int32.Parse(temp);
                return Int32.Parse(temp);
            }
        }
        return 0;
    }
    
    private string rev(int x,bool isnumber=false)
    {
        StringBuilder ret=new StringBuilder();
        int tmp=x;
        if(x<0)
            tmp=(x==Int32.MinValue?-(-x+1):-x);
        while(tmp>0)
        {
            ret.Append(tmp%10);
            tmp/=10;
        }
        if(!isnumber)
        {
            for(int i=0,j=ret.Length-1;i<=j;i++,j--)
            {
                char t=ret[i];
                ret[i]=ret[j];
                ret[j]=t;
            }
        }
        return ret.ToString();
    }
}
