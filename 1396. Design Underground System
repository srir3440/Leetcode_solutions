public class detail
{
    public string snames;
    public int time;
    public detail(string sname,int time)
    {
        this.snames=sname;
        this.time=time;
    }
}

public class UndergroundSystem {
    private Dictionary<int,detail> dict;
    private Dictionary<string,double[]> stationtimemap;
    public UndergroundSystem() {
        dict=new Dictionary<int,detail>();
        stationtimemap=new Dictionary<string,double[]>();
    }
    
    public void CheckIn(int id, string stationName, int t) {
        if(!dict.ContainsKey(id))
            dict.Add(id,new detail(stationName,t));
    }
    
    public void CheckOut(int id, string stationName, int t) {
        dict[id].snames+=" "+stationName;
        dict[id].time=t-dict[id].time;
        if(!stationtimemap.ContainsKey(dict[id].snames))
            stationtimemap.Add(dict[id].snames,new double[]{0,0});
        stationtimemap[dict[id].snames][1]+=dict[id].time;
        stationtimemap[dict[id].snames][0]++;
        dict.Remove(id);
    }
    
    public double GetAverageTime(string startStation, string endStation) {
        return stationtimemap[startStation+" "+endStation][1]/stationtimemap[startStation+" "+endStation][0];
    }
}

/**
 * Your UndergroundSystem object will be instantiated and called as such:
 * UndergroundSystem obj = new UndergroundSystem();
 * obj.CheckIn(id,stationName,t);
 * obj.CheckOut(id,stationName,t);
 * double param_3 = obj.GetAverageTime(startStation,endStation);
 */
